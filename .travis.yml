language: python
os: linux
dist: xenial
matrix:
  include:
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_install: 
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 50
        - sudo pip install CppHeaderParser
      script:
        - mkdir build && cd build
        - cmake .. -DSTATIC_LINKING=FALSE -DSNAB_DEBUG=TRUE -DPYTHON_VERSION_MAJOR=2
        - make && make test ARGS=-V
        - cmake .. -DSTATIC_LINKING=TRUE -DSNAB_DEBUG=FALSE -DPYTHON_VERSION_MAJOR=2
        - make && make test ARGS=-V
      after_success:
        - python ../source/util/generate_bench_json.py
        - git clone "https://${GITHUB_TOKEN}@${DEPLOY_ADDRESS}" &>/dev/null
        - cd SNABSuite_deploy
        - cp ../benchmark benchmark
        - cp ../../source/util/benchmark.py benchmark.py
        - cp ../benchmarks.json benchmarks.json
        - cp -r ../../config/ ./
        - cp ../cypress_ext-prefix/src/cypress_ext-build/libBS2CYPRESS.so ./
        - git add *
        - git commit -m "Update to latest SNABSuite master"
        - git push "https://${GITHUB_TOKEN}@${DEPLOY_ADDRESS}" master &>/dev/null

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
          before_install: 
      env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_install: 
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 50
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 50

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      before_install: 
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 50
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 50

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_install: 
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 50
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 50

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-3.8
          packages:
            - g++-6
            - clang-3.8
      env: MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
      before_install:
        export CXX="clang++-3.8" CC="clang-3.8"
        sudo export CXX="clang++-3.8" CC="clang-3.8"

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-4.0
          packages:
            - g++-6
            - clang-4.0
      env: MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      before_install:
        export CXX="clang++-4.0" CC="clang-4.0"
        sudo export CXX="clang++-4.0" CC="clang-4.0"

    - addons:
        apt:
          packages:
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
      before_install:
      install:
      script:
        - mkdir build
        - doxygen doxygen.conf
      deploy:
        provider: pages
        skip_cleanup: true
        local_dir: build/doc/html/
        github_token: $GITHUB_TOKEN
        on:
          branch: master


before_install:
    - eval "${MATRIX_EVAL}"

install: 
  - sudo pip install cython numpy pyNN==0.9.2 requests pyminifier
script: 
  - mkdir build && cd build
  - cmake .. -DSTATIC_LINKING=FALSE -DSNAB_DEBUG=TRUE
  - make && make test ARGS=-V
  - cmake .. -DSTATIC_LINKING=TRUE -DSNAB_DEBUG=FALSE
  - make && make test ARGS=-V
